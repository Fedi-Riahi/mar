generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?
  phone Int?
  location String?
  businessName String?
  bio String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]   // Orders placed by the user
  products  Product[] // Products created by the user (e.g., artisan)
  tickets Ticket[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  category    String?
  pictures    String[] // Array of image URLs
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
  userId      String   // Foreign key to link to the artisan (User)
  user        User     @relation(fields: [userId], references: [id]) // Relation to User
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  totalPrice  Float
  status      String      @default("PENDING")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  unitPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  subject String
  message String
  status     String   @default("PENDING")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
